<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.agtsys.dao.Role_PremissionMapper" >
  <resultMap id="BaseResultMap" type="org.agtsys.domain.Role_Premission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="roleId" property="roleid" jdbcType="BIGINT" />
    <result column="functionId" property="functionid" jdbcType="BIGINT" />
    <result column="creationTime" property="creationtime" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdby" jdbcType="VARCHAR" />
    <result column="lastUpdateTime" property="lastupdatetime" jdbcType="TIMESTAMP" />
    <result column="isStart" property="isstart" jdbcType="INTEGER" />
  </resultMap>
  <!-- <sql id="Base_Column_List" >
    id, roleId, functionId, creationTime, createdBy, lastUpdateTime, isStart
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from as_role_premission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from as_role_premission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.agtsys.domain.role_Premission" >
    insert into as_role_premission (id, roleId, functionId, 
      creationTime, createdBy, lastUpdateTime, 
      isStart)
    values (#{id,jdbcType=BIGINT}, #{roleid,jdbcType=BIGINT}, #{functionid,jdbcType=BIGINT}, 
      #{creationtime,jdbcType=TIMESTAMP}, #{createdby,jdbcType=VARCHAR}, #{lastupdatetime,jdbcType=TIMESTAMP}, 
      #{isstart,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.agtsys.domain.role_Premission" >
    insert into as_role_premission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="functionid != null" >
        functionId,
      </if>
      <if test="creationtime != null" >
        creationTime,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime,
      </if>
      <if test="isstart != null" >
        isStart,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=BIGINT},
      </if>
      <if test="functionid != null" >
        #{functionid,jdbcType=BIGINT},
      </if>
      <if test="creationtime != null" >
        #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatetime != null" >
        #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isstart != null" >
        #{isstart,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.agtsys.domain.role_Premission" >
    update as_role_premission
    <set >
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT},
      </if>
      <if test="functionid != null" >
        functionId = #{functionid,jdbcType=BIGINT},
      </if>
      <if test="creationtime != null" >
        creationTime = #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isstart != null" >
        isStart = #{isstart,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.agtsys.domain.role_Premission" >
    update as_role_premission
    set roleId = #{roleid,jdbcType=BIGINT},
      functionId = #{functionid,jdbcType=BIGINT},
      creationTime = #{creationtime,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=VARCHAR},
      lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      isStart = #{isstart,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>