<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.agtsys.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="org.agtsys.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userCode" property="usercode" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userPassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="creationTime" property="creationtime" jdbcType="TIMESTAMP" />
    <result column="lastLoginTime" property="lastlogintime" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdby" jdbcType="VARCHAR" />
    <result column="lastUpdateTime" property="lastupdatetime" jdbcType="TIMESTAMP" />
    <result column="isStart" property="isstart" jdbcType="INTEGER" />
    <result column="roleId" property="roleid" jdbcType="BIGINT" />
  </resultMap>
   <select id="getUserByUser" resultType="org.agtsys.domain.User" parameterType="org.agtsys.domain.User" >
    select * from as_user
			<where>
				<if test="usercode != null">
					as_user.userCode=#{usercode}
				</if>
				<if test="userpassword != null"></if>
					and as_user.userPassword=#{userpassword}
			</where>
  </select>
  
   <update id="updateUser" parameterType="org.agtsys.domain.User" >
    update as_user
    <set >
      <if test="usercode != null" >
        userCode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null" >
        creationTime = #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isstart != null" >
        isStart = #{isstart,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 查询总条数 -->
    <select id="getCount" resultType="java.lang.Integer" parameterType="org.agtsys.domain.User" >
    select count(1) from as_user
    <where>
    		<if test="isstart !=null">isstart=#{isstart}</if>
    		<if test="username !=null">and username like CONCAT('%',#{username},'%')</if>
    		<if test="roleid !=null">and roleid=#{roleid}</if>
    	</where>
  </select>
  <!-- 分页条件查询 -->
	<select id="getPageUserByUser" resultType="org.agtsys.domain.User"  >
    select  as_user.*,as_role.rolename from as_user inner join as_role on as_user.roleId=as_role.id
    <if test="user !=null">
    	<where>
    		<if test="user.isstart !=null">as_user.isstart=#{user.isstart}</if>
    		<if test="user.username !=null">and username like CONCAT('%',#{user.username},'%')</if>
    		<if test="user.roleid !=null">and roleid=#{user.roleid}</if>
    	</where>
    	<if test="pt !=null">limit #{pt.limit_begin},#{pt.size}</if>
    </if>
  </select>
 <insert id="insertUser" parameterType="User">
    insert into as_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usercode != null" >
        userCode,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="userpassword != null" >
        userPassword,
      </if>
      <if test="creationtime != null" >
        creationTime,
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime,
      </if>
      <if test="isstart != null" >
        isStart,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null" >
        #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatetime != null" >
        #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isstart != null" >
        #{isstart,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=BIGINT},
      </if>
    </trim>
    <selectKey order="AFTER" keyProperty="id" resultType="long" >
    	select LAST_INSERT_ID() as id
    </selectKey>
  </insert>
  
  
  <!-- <sql id="Base_Column_List" >
    id, userCode, userName, userPassword, creationTime, lastLoginTime, createdBy, lastUpdateTime, 
    isStart, roleId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from as_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from as_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.agtsys.domain.User" >
    insert into as_user (id, userCode, userName, 
      userPassword, creationTime, lastLoginTime, 
      createdBy, lastUpdateTime, isStart, 
      roleId)
    values (#{id,jdbcType=BIGINT}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{userpassword,jdbcType=VARCHAR}, #{creationtime,jdbcType=TIMESTAMP}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{createdby,jdbcType=VARCHAR}, #{lastupdatetime,jdbcType=TIMESTAMP}, #{isstart,jdbcType=INTEGER}, 
      #{roleid,jdbcType=BIGINT})
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="org.agtsys.domain.User" >
    update as_user
    <set >
      <if test="usercode != null" >
        userCode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="creationtime != null" >
        creationTime = #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=VARCHAR},
      </if>
      <if test="lastupdatetime != null" >
        lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isstart != null" >
        isStart = #{isstart,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.agtsys.domain.User" >
    update as_user
    set userCode = #{usercode,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userPassword = #{userpassword,jdbcType=VARCHAR},
      creationTime = #{creationtime,jdbcType=TIMESTAMP},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      createdBy = #{createdby,jdbcType=VARCHAR},
      lastUpdateTime = #{lastupdatetime,jdbcType=TIMESTAMP},
      isStart = #{isstart,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>